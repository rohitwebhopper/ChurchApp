// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Admin {
  id                        String     @id @default(uuid())
  name                      String
  phone                     String
  email                     String     @unique
  password                  String
  role                      Role       @default(SUB_ADMIN)
  image                     String?
  churches                  Church[]   @relation("AdminChurches")
  activities                Activity[]
  projects                  Projects[]

  createdAt                 DateTime   @default(now())
  updatedAt                 DateTime   @default(now())
}

model Church {
  id                        String       @id @default(uuid())
  name                      String       @unique
  email                     String
  phone                     String
  address                   String
  bank_name                 String?
  bank_acc_no               String?
  ifsc_code                 String?
  church_rules              String?
  image                     String?
  agreement_url             String?
  status                    Status       @default(PENDING)

  admins                    Admin[]      @relation("AdminChurches")
  users                     User[]
  donations                 Donation[]
  sermons                   Sermon[]
  events                    Event[]
  prayers                   Prayer[]
  connected                 Connected[]
  projects                  Projects[]
  transactions              Transaction[]

  createdAt                 DateTime     @default(now())
  updatedAt                 DateTime     @default(now())
}

model User {
  id                        String       @id @default(uuid())
  name                      String
  email                     String       @unique
  phone                     String
  address                   String
  password                  String
  status                    Status       @default(PENDING)

  churchId                  String
  church                    Church       @relation(fields: [churchId], references: [id])
  donations                 Donation[]
  events                    Event[]
  prayers                   Prayer[]
  connected                 Connected[]
  transactions                        Transaction[]

  createdAt                 DateTime     @default(now())
  updatedAt                 DateTime     @default(now())
}

model Donation {
  id                        String       @id @default(uuid())
  amount                    Float
  description               String
  type                      DonationType

  userId                    String
  churchId                  String
  user                      User         @relation(fields: [userId], references: [id])
  church                    Church       @relation(fields: [churchId], references: [id])

  createdAt                 DateTime     @default(now())
}

model Activity {
  id                        String       @id @default(uuid())
  message                   String
  action                    ActivityType
  adminId                   String?
  admin                     Admin?       @relation(fields: [adminId], references: [id])
  createdAt                 DateTime     @default(now())
}

model Sermon {
  id                        String     @id @default(uuid())
  thumbnail_image           String?
  video_url                 String?
  title                     String?
  description               String?

  churchId                  String
  church                    Church     @relation(fields: [churchId], references: [id])
  createdAt                 DateTime   @default(now())
  updatedAt                 DateTime   @default(now())
}

model Event {
  id                        String     @id @default(uuid())
  event_image               String?
  title                     String
  event_date                DateTime
  event_time                String
  address                   String
  description               String
  upcoming                  Boolean
  latitude                  String
  longitude                 String
  status                    Status     @default(INACTIVE)

  userId                    String
  churchId                  String
  user                      User       @relation(fields: [userId], references: [id])
  church                    Church     @relation(fields: [churchId], references: [id])

  createdAt                 DateTime   @default(now())
  updatedAt                 DateTime   @default(now())
}

model PrayerType {
  id                        String     @id @default(uuid())
  name                      String
  prayers                   Prayer[]

  createdAt                 DateTime   @default(now())
  updatedAt                 DateTime   @default(now())
}

model Prayer {
  id                        String     @id @default(uuid())
  name                      String
  phone                     String
  email                     String
  offering                  Float
  description               String
  replied                   Boolean    @default(false)

  userId                    String
  churchId                  String
  prayerTypeId              String

  user                      User       @relation(fields: [userId], references: [id])
  church                    Church     @relation(fields: [churchId], references: [id])
  prayer_type               PrayerType @relation(fields: [prayerTypeId], references: [id])

  createdAt                 DateTime   @default(now())
  updatedAt                 DateTime   @default(now())
}

model Connected {
  id                        String     @id @default(uuid())
  name                      String
  email                     String
  phone                     String
  address                   String
  description               String
  replied                   Boolean    @default(false)

  userId                    String
  churchId                  String
  user                      User       @relation(fields: [userId], references: [id])
  church                    Church     @relation(fields: [churchId], references: [id])

  createdAt                 DateTime   @default(now())
}

model Projects {
  id                        String     @id @default(uuid())
  project_name              String
  description               String
  set_amount                Float
  receive_amount            Float
  active                    Status     @default(INACTIVE)

  churchId                  String
  adminId                   String?
  admin                     Admin?     @relation(fields: [adminId], references: [id])
  church                    Church     @relation(fields: [churchId], references: [id])

  createdAt                 DateTime   @default(now())
  updatedAt                 DateTime   @default(now())
}

model Transaction {
  id                        String        @id @default(uuid())
  amount                    Float
  txn_no                    String
  payment_mode              String
  type                      DonationType
  church_share              String
  admin_share               String

  userId                    String
  churchId                  String
  user                      User          @relation(fields: [userId], references: [id])
  church                    Church        @relation(fields: [churchId], references: [id])

  createdAt                 DateTime      @default(now())
}

enum Role {
  SUPER_ADMIN
  SUB_ADMIN
}

enum Status {
  ACTIVE
  INACTIVE
  PENDING
}

enum ActivityType {
  REPLIED
  DELETED
  APPROVED
  RECEIVED
  ADDED
}

enum DonationType {
  TITHE
  OFFERING
  PROJECT
}
